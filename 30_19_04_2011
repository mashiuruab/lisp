#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 66 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 22 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 15 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 14 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 14 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 22 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
22 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 15 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 17 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
20 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 20 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 20 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
19 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 19 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 19 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
          0 610 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 464
(
 #"#reader(lib \"htdp-advanced-reader.ss\" \"lang\")((modname 30_19_04_"
 #"2011) (read-case-sensitive #t) (teachpacks ((lib \"draw.ss\" \"teach"
 #"pack\" \"htdp\") (lib \"hangman.ss\" \"teachpack\" \"htdp\") (lib \""
 #"guess.ss\" \"teachpack\" \"htdp\") (lib \"gui.ss\" \"teachpack\" \"h"
 #"tdp\"))) (htdp-settings #(#t constructor repeating-decimal #t #t non"
 #"e #f ((lib \"draw.ss\" \"teachpac"
 #"k\" \"htdp\") (lib \"hangman.ss\" \"teachpack\" \"htdp\") (lib \"gue"
 #"ss.ss\" \"teachpack\" \"htdp\") (lib \"gui.ss\" \"teachpack\" \"htdp"
 #"\")))))"
) 0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"f"
0 0 54 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 2 #"  "
0 0 14 3 6 #"a-list"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 17 3 52 #";;....................30.1.1........................"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 19 #"relative-2-absolute"
0 0 54 3 1 #" "
0 0 14 3 4 #"alon"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 54 29 1 #"\n"
0 0 54 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 54 3 1 #" "
0 0 14 3 4 #"alon"
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #"]"
0 0 54 29 1 #"\n"
0 0 54 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 54 3 1 #" "
0 0 14 3 4 #"alon"
0 0 22 3 2 #"))"
0 0 54 29 1 #"\n"
0 1 54 65 1 #"\t"
0 0 54 3 8 #"        "
0 0 22 3 1 #"("
0 0 15 3 5 #"local"
0 0 54 3 1 #" "
0 0 22 3 2 #"(("
0 0 15 3 6 #"define"
0 0 54 3 1 #" "
0 0 14 3 1 #"n"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 54 3 1 #" "
0 0 14 3 4 #"alon"
0 0 22 3 2 #"))"
0 0 54 29 1 #"\n"
0 0 54 3 24 #"                        "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"add-to-each"
0 0 54 3 1 #" "
0 0 14 3 4 #"alon"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 26 #"                          "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 54 29 1 #"\n"
0 0 54 3 28 #"                            "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 54 3 1 #" "
0 0 14 3 4 #"alon"
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #"]"
0 0 54 29 1 #"\n"
0 0 54 3 28 #"                            "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 54 3 1 #" "
0 0 14 3 4 #"alon"
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"add-to-each"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 54 3 1 #" "
0 0 14 3 4 #"alon"
0 0 22 3 7 #")))])))"
0 0 54 29 1 #"\n"
0 0 54 3 18 #"                  "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 54 3 1 #" "
0 0 14 3 11 #"add-to-each"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 19 #"relative-2-absolute"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 54 3 1 #" "
0 0 14 3 4 #"alon"
0 0 22 3 8 #")))))]))"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 7         355 54           0 0           0 58 0 17 3 60
#";; add-to-each : number (listof number)  ->  (listof number)"
0 0 2 29 1 #"\n"
0 0 17 3 34 #";; to add n to each number on alon"
0 0 2 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"add-to-each"
0 0 2 3 1 #" "
0 0 14 3 1 #"n"
0 0 2 3 1 #" "
0 0 14 3 4 #"alon"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 2 29 1 #"\n"
0 0 2 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 2 3 1 #" "
0 0 14 3 4 #"alon"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #"]"
0 0 2 29 1 #"\n"
0 0 2 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 2 3 1 #" "
0 0 14 3 4 #"alon"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"add-to-each"
0 0 2 3 1 #" "
0 0 14 3 1 #"n"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 2 3 1 #" "
0 0 14 3 4 #"alon"
0 0 22 3 6 #")))]))"
0           0 0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"convert"
0 0 54 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 54 29 1 #"\n"
0 0 54 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 54 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #"]"
0 0 54 29 1 #"\n"
0 0 54 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"append"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 54 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"convert"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 54 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 22 3 6 #")))]))"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 17 3 61
#";;..........................................................."
0 0 54 29 1 #"\n"
0 0 17 3 61
#";;..........................................................."
0 0 54 29 1 #"\n"
0 0 17 3 61
#";;..........................................................."
0 0 54 29 1 #"\n"
0 0 17 3 61
#";;..........................................................."
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 54 3 1 #" "
0 0 14 3 7 #"SimpleG"
0 0 54 3 1 #" "
0 0 54 29 1 #"\n"
0 0 54 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"A"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"B"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"B"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"C"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"C"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"E"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"D"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"E"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"E"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"B"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"F"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"F"
0 0 22 3 3 #")))"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 54 3 1 #" "
0 0 14 3 14 #"SimpleG-vector"
0 0 54 3 1 #" "
0 0 54 29 1 #"\n"
0 0 54 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 6 #"vector"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"vector"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"A"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"B"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 6 #"vector"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"B"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"C"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 6 #"vector"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"C"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"E"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 6 #"vector"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"D"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"E"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 6 #"vector"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"E"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"B"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 6 #"vector"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"F"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"F"
0 0 22 3 3 #")))"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 17 3 55 #";; route-exists2? : node node simple-graph  ->  boolean"
0 0 54 29 1 #"\n"
0 0 17 3 64
#";; to determine whether there is a route from orig to dest in sg"
0 0 54 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"route-exists2?"
0 0 54 3 1 #" "
0 0 14 3 4 #"orig"
0 0 54 3 1 #" "
0 0 14 3 4 #"dest"
0 0 54 3 1 #" "
0 0 14 3 2 #"sg"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 5 #"local"
0 0 54 3 1 #" "
0 0 22 3 2 #"(("
0 0 15 3 6 #"define"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"re-accu?"
0 0 54 3 1 #" "
0 0 14 3 4 #"orig"
0 0 54 3 1 #" "
0 0 14 3 4 #"dest"
0 0 54 3 1 #" "
0 0 14 3 2 #"sg"
0 0 54 3 1 #" "
0 0 14 3 9 #"accu-seen"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 12 #"            "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 54 29 1 #"\n"
0 0 54 3 14 #"              "
0 0 22 3 2 #"[("
0 0 14 3 8 #"symbol=?"
0 0 54 3 1 #" "
0 0 14 3 4 #"orig"
0 0 54 3 1 #" "
0 0 14 3 4 #"dest"
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #"]"
0 0 54 29 1 #"\n"
0 0 54 3 14 #"              "
0 0 22 3 2 #"[("
0 0 14 3 8 #"contains"
0 0 54 3 1 #" "
0 0 14 3 4 #"orig"
0 0 54 3 1 #" "
0 0 14 3 9 #"accu-seen"
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #"]"
0 0 54 29 1 #"\n"
0 0 54 3 14 #"              "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"re-accu?"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"neighbor"
0 0 54 3 1 #" "
0 0 14 3 4 #"orig"
0 0 54 3 1 #" "
0 0 14 3 2 #"sg"
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 14 3 4 #"dest"
0 0 54 3 1 #" "
0 0 14 3 2 #"sg"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 54 3 1 #" "
0 0 14 3 4 #"orig"
0 0 54 3 1 #" "
0 0 14 3 9 #"accu-seen"
0 0 22 3 6 #"))])))"
0 0 54 3 1 #" "
0 0 54 29 1 #"\n"
0 0 54 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 8 #"re-accu?"
0 0 54 3 1 #" "
0 0 14 3 4 #"orig"
0 0 54 3 1 #" "
0 0 14 3 4 #"dest"
0 0 54 3 1 #" "
0 0 14 3 2 #"sg"
0 0 54 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 3 #")))"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"contains"
0 0 54 3 1 #" "
0 0 14 3 8 #"a-symbol"
0 0 54 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 54 29 1 #"\n"
0 0 54 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 54 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #"]"
0 0 54 29 1 #"\n"
0 0 54 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 54 29 1 #"\n"
0 0 54 3 12 #"            "
0 0 22 3 2 #"[("
0 0 14 3 8 #"symbol=?"
0 0 54 3 1 #" "
0 0 14 3 8 #"a-symbol"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 54 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 22 3 2 #"))"
0 0 54 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #"]"
0 0 54 29 1 #"\n"
0 0 54 3 12 #"            "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"contains"
0 0 54 3 1 #" "
0 0 14 3 8 #"a-symbol"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 54 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 22 3 7 #"))])]))"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"neighbor"
0 0 54 3 1 #" "
0 0 14 3 6 #"a-node"
0 0 54 3 1 #" "
0 0 14 3 2 #"sg"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 54 29 1 #"\n"
0 0 54 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 54 3 1 #" "
0 0 14 3 2 #"sg"
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"error"
0 0 54 3 1 #" "
0 0 19 3 22 #"\"neighbor: impossible\""
0 0 22 3 2 #")]"
0 0 54 29 1 #"\n"
0 0 54 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 54 29 1 #"\n"
0 1 54 65 1 #"\t"
0 0 54 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 8 #"symbol=?"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 54 3 1 #" "
0 0 14 3 2 #"sg"
0 0 22 3 2 #"))"
0 0 54 3 1 #" "
0 0 14 3 6 #"a-node"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 1 54 65 1 #"\t"
0 0 54 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 6 #"second"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 54 3 1 #" "
0 0 14 3 2 #"sg"
0 0 22 3 3 #"))]"
0 0 54 29 1 #"\n"
0 1 54 65 1 #"\t"
0 0 54 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"neighbor"
0 0 54 3 1 #" "
0 0 14 3 6 #"a-node"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 54 3 1 #" "
0 0 14 3 2 #"sg"
0 0 22 3 7 #"))])]))"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0           0
